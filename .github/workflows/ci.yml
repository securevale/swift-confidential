name: CI

on:
  push:
    branches:
      - 'master'
      - 'release/**'
    paths-ignore:
      - '.gitignore'
      - '.spi.yml'
      - 'CODE_OF_CONDUCT.md'
      - 'LICENSE'
      - 'README.md'
  pull_request:
    branches-ignore:
      - 'bugfix/**'
      - 'feature/**'
      - 'topic/**'
    paths-ignore:
      - '.gitignore'
      - '.spi.yml'
      - 'CODE_OF_CONDUCT.md'
      - 'LICENSE'
      - 'README.md'
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: macos-15

    steps:
      - name: Install SwiftLint
        run: brew install swiftlint

      - name: Checkout
        uses: actions/checkout@v5

      - name: Lint Swift Code
        run: swiftlint lint --strict --reporter github-actions-logging

      - name: Lint Bash Code
        uses: ludeeus/action-shellcheck@master
        with:
          scandir: './Scripts'
          ignore_paths: Templates
          version: v0.11.0
        env:
          SHELLCHECK_OPTS: -e SC1009 -e SC1072 -e SC1073 -e SC1090 -e SC1091

  tests:
    name: Tests (Xcode ${{ matrix.xcode }}${{ matrix.upload_coverage && ', Upload Coverage Report' || '' }})
    needs: [lint]
    runs-on: macos-${{ matrix.macos }}
    env:
      DEVELOPER_DIR: "/Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer"
    strategy:
      matrix:
        include:
          - macos: 15
            xcode: '16.2'  # Swift 6.0
            upload_coverage: false
          - macos: 15
            xcode: '16.4'  # Swift 6.1
            upload_coverage: false
          - macos: 15
            xcode: '26.0'  # Swift 6.2
            upload_coverage: true

    steps:
      - name: Runner Overview
        run: system_profiler SPHardwareDataType SPSoftwareDataType SPDeveloperToolsDataType

      - name: Checkout
        uses: actions/checkout@v5

      - name: Upgrade Bash
        run: make bash

      - name: Run Tests
        run: make tests

      - name: Upload Code Coverage Report
        if: ${{ matrix.upload_coverage }}
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./.coverage/
          fail_ci_if_error: true
          verbose: true
